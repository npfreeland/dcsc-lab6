# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import lab6_pb2 as lab6__pb2


class Lab6grpcStub(object):
    """Interface exported by the server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.doAdd = channel.unary_unary(
                '/lab6Proto.Lab6grpc/doAdd',
                request_serializer=lab6__pb2.addRequest.SerializeToString,
                response_deserializer=lab6__pb2.addReply.FromString,
                )
        self.doDotproduct = channel.unary_unary(
                '/lab6Proto.Lab6grpc/doDotproduct',
                request_serializer=lab6__pb2.dotproductRequest.SerializeToString,
                response_deserializer=lab6__pb2.dotproductReply.FromString,
                )
        self.doRawimage = channel.unary_unary(
                '/lab6Proto.Lab6grpc/doRawimage',
                request_serializer=lab6__pb2.rawimageRequest.SerializeToString,
                response_deserializer=lab6__pb2.imageReply.FromString,
                )
        self.doJsonimage = channel.unary_unary(
                '/lab6Proto.Lab6grpc/doJsonimage',
                request_serializer=lab6__pb2.jsonimageRequest.SerializeToString,
                response_deserializer=lab6__pb2.imageReply.FromString,
                )


class Lab6grpcServicer(object):
    """Interface exported by the server.
    """

    def doAdd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def doDotproduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def doRawimage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def doJsonimage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Lab6grpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'doAdd': grpc.unary_unary_rpc_method_handler(
                    servicer.doAdd,
                    request_deserializer=lab6__pb2.addRequest.FromString,
                    response_serializer=lab6__pb2.addReply.SerializeToString,
            ),
            'doDotproduct': grpc.unary_unary_rpc_method_handler(
                    servicer.doDotproduct,
                    request_deserializer=lab6__pb2.dotproductRequest.FromString,
                    response_serializer=lab6__pb2.dotproductReply.SerializeToString,
            ),
            'doRawimage': grpc.unary_unary_rpc_method_handler(
                    servicer.doRawimage,
                    request_deserializer=lab6__pb2.rawimageRequest.FromString,
                    response_serializer=lab6__pb2.imageReply.SerializeToString,
            ),
            'doJsonimage': grpc.unary_unary_rpc_method_handler(
                    servicer.doJsonimage,
                    request_deserializer=lab6__pb2.jsonimageRequest.FromString,
                    response_serializer=lab6__pb2.imageReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lab6Proto.Lab6grpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Lab6grpc(object):
    """Interface exported by the server.
    """

    @staticmethod
    def doAdd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lab6Proto.Lab6grpc/doAdd',
            lab6__pb2.addRequest.SerializeToString,
            lab6__pb2.addReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def doDotproduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lab6Proto.Lab6grpc/doDotproduct',
            lab6__pb2.dotproductRequest.SerializeToString,
            lab6__pb2.dotproductReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def doRawimage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lab6Proto.Lab6grpc/doRawimage',
            lab6__pb2.rawimageRequest.SerializeToString,
            lab6__pb2.imageReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def doJsonimage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/lab6Proto.Lab6grpc/doJsonimage',
            lab6__pb2.jsonimageRequest.SerializeToString,
            lab6__pb2.imageReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
